// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© daemontool

//@version=5
// MFI
indicator(title="Composite Index MFI+RSI+UO Divergence Indicator @daemontool", shorttitle="Composite Index Divergence MFI+RSI+UO @daemontool", format=format.price, precision=2, timeframe="", timeframe_gaps=true)
useclose = input(title="use body not shadow", defval=false)
lbR = input(title="Pivot Lookback Right", defval=1)
lbL = input(title="Pivot Lookback Left", defval=5)
rangeUpper = input(title="Max of Lookback Range", defval=60)
rangeLower = input(title="Min of Lookback Range", defval=5)
plotBull = input(title="Plot Bullish", defval=true)
plotHiddenBull = input(title="Plot Hidden Bullish", defval=true)
plotBear = input(title="Plot Bearish", defval=true)
plotHiddenBear = input(title="Plot Hidden Bearish", defval=true)
bearColor = color.red
bullColor = color.green
hiddenBullColor = color.new(color.green, 80)
hiddenBearColor = color.new(color.red, 80)
textColor = color.white
noneColor = color.new(color.white, 100)
mfi_src = input(title="MFI Source", defval=close)
mfi_length=input(title="MFI Length", defval=35)
mfi_mom_length=input(18, title="MFI Momentum Length")
mfi_ma_length=input(6, title="MFI MA Length")
mfi_sma_length=input(6, title="SMA Length")
fastLength=input(13)
slowLength=input(33)

mfi=ta.mfi(mfi_src, mfi_length)
mfidelta = ta.mom(mfi, mfi_mom_length)
mfisma = ta.sma(ta.mfi(mfi_src, mfi_ma_length), mfi_sma_length)
mfi_osc=mfidelta+mfisma
// END MFI

//RSI
rsi_src = input(title="RSI Source", defval=close)
rsi_length=input(title="RSI Length", defval=35)
rsi_mom_length=input(18, title="RSI Momentum Length")
rsi_ma_length=input(6, title="RSI MA Length")
rsi_sma_length=input(6, title="SMA Length")
rsi_fastLength=input(13)
rsi_slowLength=input(33)

rsi=ta.rsi(rsi_src, rsi_length)
rsidelta = ta.mom(rsi, rsi_mom_length)
rsisma = ta.sma(ta.rsi(rsi_src, rsi_ma_length), rsi_sma_length)
rsi_osc=rsidelta+rsisma
// END RSI

// UO
length1 = input.int(minval=1, title = "UO Fast Length", defval=21)
length2 = input.int(minval=1, title = "UO Middle Length", defval=32)
length3 = input.int(minval=1, title = "UO Slow Length", defval=84)
average(bp, tr_, length) => math.sum(bp, length) / math.sum(tr_, length)
high_ = math.max(high, close[1])
low_ = math.min(low, close[1])
bp = close - low_
tr_ = high_ - low_
avg7 = average(bp, tr_, length1)
avg14 = average(bp, tr_, length2)
avg28 = average(bp, tr_, length3)
uo_osc = 100 * (4*avg7 + 2*avg14 + avg28)/7
// END UO

// Average of RSI + MFI + UO
osc=(rsi_osc+mfi_osc+uo_osc)/3

// START QQE
//qqe_src=input(close)
//qqe_length = input.int(14,"CDIE Length", minval=1)
//qqe_SSF=input.int(5, "SF CDIE SMoothing Factor", minval=1)
//showsignals = input.bool(title="Show Crossing Signals?", defval=true)
//highlighting = input.bool(title="Highlighter On/Off ?", defval=true)
//CDIEI=ta.ema(osc,qqe_SSF)

//TR=math.abs(CDIEI-CDIEI[1])
//wwalpha = 1/ qqe_length
//WWMA = 0.0
//WWMA := wwalpha*TR + (1-wwalpha)*nz(WWMA[1])
//ATRRSI=0.0
//ATRRSI := wwalpha*WWMA + (1-wwalpha)*nz(ATRRSI[1])
//QQEF=ta.ema(osc,qqe_SSF)
//QUP=QQEF+ATRRSI*4.236
//QDN=QQEF-ATRRSI*4.236
//QQES=0.0
//QQES:=QUP<nz(QQES[1]) ? QUP : QQEF>nz(QQES[1]) and QQEF[1]<nz(QQES[1]) ? QDN :  QDN>nz(QQES[1]) ? QDN : QQEF<nz(QQES[1]) and QQEF[1]>nz(QQES[1]) ? QUP : nz(QQES[1])
//QQF=plot(QQEF,"FAST",color.maroon,2)
//QQS=plot(QQES,"SLOW",color=color.blue, linewidth=1)
//plot(50,color=color.gray)
//longFillColor = highlighting ? (QQEF>QQES ? color.green : na) : na
//shortFillColor = highlighting ? (QQEF<QQES ? color.red : na) : na
//fill(QQF, QQS, title="UpTrend Highligter", color=longFillColor)
//fill(QQF, QQS, title="DownTrend Highligter", color=shortFillColor)
//buySignalr = ta.crossover(QQEF, QQES)
//plotshape(buySignalr and showsignals ? QQES*0.995 : na, title="Buy", text="Buy", location=location.absolute, style=shape.labelup, size=size.tiny, color=color.green, textcolor=color.white)
//sellSignallr = ta.crossunder(QQEF, QQES)
//plotshape(sellSignallr and showsignals ? QQES*1.005 : na, title="Sell", text="Sell", location=location.absolute, style=shape.labeldown, size=size.tiny, color=color.red, textcolor=color.white)
//alertcondition(ta.cross(QQEF, QQES), title="Cross Alert", message="QQE Crossing Signal!")
//alertcondition(ta.crossover(QQEF, QQES), title="Crossover Alarm", message="QQE BUY SIGNAL!")
//alertcondition(ta.crossunder(QQEF, QQES), title="Crossunder Alarm", message="QQE SELL SIGNAL!")
//alertcondition(ta.crossover(QQEF, 50), title="Cross 50 Up Alert", message="QQE FAST Crossing 50 UP!")
//alertcondition(ta.crossunder(QQEF, 50), title="Cross 50 Down Alert", message="QQE FAST Crossing 50 DOWN!")
// END QQE

// END RSI, MFI and UO AVG

// Upper and Lower bands
CIUpperBand = input(title="CID Upper Band (Hyperbought)", defval=75)
hline(CIUpperBand, "Overbought Upper Band", color=#787B86)
hline(50, "Middle Band", color=color.new(#787B86, 50))
CILowerBand = input(title="CID Lower Band (Hypersold)", defval=25)
hline(CILowerBand, "Oversold Lower Band", color=#787B86)
rel_oversold = input(title="CID Oversold", defval=25)
rel_overbought = input(title="CID Overbought", defval=75)
// End Upper and Lower bands

//
plot(osc, title="Composite index", linewidth=2, color=#8D1699)
plot(ta.sma(osc, fastLength), color=color.green)
plot(ta.sma(osc, slowLength), color=color.orange)


plFound = na(ta.pivotlow(osc, lbL, lbR)) ? false : true
phFound = na(ta.pivothigh(osc, lbL, lbR)) ? false : true
_inRange(cond) =>
	bars = ta.barssince(cond == true)
	rangeLower <= bars and bars <= rangeUpper

//------------------------------------------------------------------------------
// Regular Bullish
// Osc: Higher Low

oscHL = osc[lbR] > ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1]) and osc <= rel_oversold or osc <= CILowerBand

// Price: Lower Low

//priceLL = low[lbR] < valuewhen(plFound, low[lbR], 1)
priceLL = useclose ? close[lbR] < ta.valuewhen(plFound, close[lbR], 1) : low[lbR] < ta.valuewhen(plFound, low[lbR], 1)
bullCond = plotBull and priceLL and oscHL and plFound

plot(
     plFound ? osc[lbR] : na,
     offset=-lbR,
     title="Regular Bullish",
     linewidth=2,
     color=(bullCond ? bullColor : noneColor),
     transp=0
     )

plotshape(
	 bullCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Regular Bullish Label",
	 text=" R ",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor,
	 transp=0
	 )

//------------------------------------------------------------------------------
// Hidden Bullish
// Osc: Lower Low

oscLL = osc[lbR] < ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1]) and osc <= rel_oversold or osc <= CILowerBand

// Price: Higher Low

//priceHL = low[lbR] > valuewhen(plFound, low[lbR], 1)
priceHL = useclose ? close[lbR] > ta.valuewhen(plFound, close[lbR], 1) : low[lbR] > ta.valuewhen(plFound, low[lbR], 1)
hiddenBullCond = plotHiddenBull and priceHL and oscLL and plFound

plot(
	 plFound ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bullish",
	 linewidth=2,
	 color=(hiddenBullCond ? hiddenBullColor : noneColor),
	 transp=0
	 )

plotshape(
	 hiddenBullCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bullish Label",
	 text=" H ",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor,
	 transp=0
	 )

//------------------------------------------------------------------------------
// Regular Bearish
// Osc: Lower High

oscLH = osc[lbR] < ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1]) and osc >= rel_overbought or osc >= CIUpperBand

// Price: Higher High

//priceHH = high[lbR] > valuewhen(phFound, high[lbR], 1)
priceHH = useclose ? close[lbR] > ta.valuewhen(phFound, close[lbR], 1) : high[lbR] > ta.valuewhen(phFound, high[lbR], 1)
bearCond = plotBear and priceHH and oscLH and phFound

plot(
	 phFound ? osc[lbR] : na,
	 offset=-lbR,
	 title="Regular Bearish",
	 linewidth=2,
	 color=(bearCond ? bearColor : noneColor),
	 transp=0
	 )

plotshape(
	 bearCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Regular Bearish Label",
	 text=" R ",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor,
	 transp=0
	 )

//------------------------------------------------------------------------------
// Hidden Bearish
// Osc: Higher High

oscHH = osc[lbR] > ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1]) and osc >= rel_overbought or osc >= CIUpperBand

// Price: Lower High

//priceLH = high[lbR] < valuewhen(phFound, high[lbR], 1)
priceLH = useclose ? close[lbR] < ta.valuewhen(phFound, close[lbR], 1) : high[lbR] < ta.valuewhen(phFound, high[lbR], 1)
hiddenBearCond = plotHiddenBear and priceLH and oscHH and phFound

plot(
	 phFound ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bearish",
	 linewidth=2,
	 color=(hiddenBearCond ? hiddenBearColor : noneColor),
	 transp=0
	 )

plotshape(
	 hiddenBearCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bearish Label",
	 text=" H ",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor,
	 transp=0
	 )

